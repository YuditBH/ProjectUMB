@inherits UmbracoViewPage

@{ 
    var title = Model.HasValue("title") ? Model.Value("title") : Model.Name;
    var subTitle = Model.HasValue("subtitle") ? Model.Value("subtitle") : "";
    var image = Model.Value<IPublishedContent>("mainImage",fallback: Fallback.ToAncestors);
    string imageUrl = "";
    if (image != null) {
        imageUrl = image.GetCropUrl(width: 1903, height: 532);
        //imageUrl = Model.Value<IPublishedContent>("mainImage").GetCropUrl(1903, 532);
    }
    var authorName = Model.HasValue("authorName") ? Model.Value("authorName") : "";
    DateTime? articleDate = Model.HasProperty("articleDate") && Model.HasValue("articleDate") ? Model.Value<DateTime>("articleDate") : DateTime.MinValue;
    bool hasAutorDetails = !string.IsNullOrWhiteSpace(authorName.ToString()) || articleDate != DateTime.MinValue;
}
<!-- Page Header-->
<header class="masthead" style="@(!string.IsNullOrWhiteSpace(imageUrl) ? "background-image: url('"+ imageUrl+"')" : "background-image: url('assets/img/contact-bg.jpg')")">
    <div class="container position-relative px-4 px-lg-5">
        <div class="row gx-4 gx-lg-5 justify-content-center">
            <div class="col-md-10 col-lg-8 col-xl-7">
                <div class="page-heading">
                    <h1>@title</h1>
                    @if (!string.IsNullOrWhiteSpace(subTitle.ToString()))
                    {
                        if (hasAutorDetails)
                        {
                            <h2 class="subheading">@subTitle</h2>}
                        else
                        {
                            <span class="subheading">@subTitle</span>
                        }
                    }
                    @if (hasAutorDetails)
                    {
                        <span class="meta">
                            Posted
                            @if (!string.IsNullOrWhiteSpace(authorName.ToString())) {
                              @Html.Raw("by")
                            <a href="#!">@authorName</a>}
                            on @DateTime.Parse(articleDate.ToString()).ToString("MMMM dd, yyyy")
                        </span>
                    }
                </div>
            </div>
        </div>
    </div>
</header>